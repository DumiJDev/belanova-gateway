version: '3.8'

# Development-specific overrides
services:
  gateway:
    environment:
      - JAVA_OPTS=-Xms512m -Xmx1g -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/./urandom
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_COM_BELANOVA_GATEWAY=DEBUG
      - LOGGING_LEVEL_IO_GITHUB_DUMIJDEV_BELANOVA_GATEWAY=DEBUG
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    command: ["sh", "-c", "java $JAVA_OPTS -jar app.jar --spring.profiles.active=dev"]

  admin-ui:
    environment:
      - JAVA_OPTS=-Xms512m -Xmx1g -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0
      - LOGGING_LEVEL_IO_GITHUB_DUMIJDEV_BELANOVA_GATEWAY=DEBUG
    volumes:
      - ./logs:/app/logs
    command: ["sh", "-c", "java $JAVA_OPTS -jar app.jar --spring.profiles.active=dev"]

  postgres:
    environment:
      - POSTGRES_LOG_STATEMENT=all
      - POSTGRES_LOG_MIN_DURATION_STATEMENT=1000
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs/postgres:/var/log/postgresql
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    command: redis-server --appendonly yes --requirepass belanova123 --loglevel verbose
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis

  prometheus:
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
      - ./logs/prometheus:/var/log/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--log.level=info'

  grafana:
    environment:
      - GF_LOG_LEVEL=debug
      - GF_USERS_ALLOW_SIGN_UP=true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
      - ./logs/grafana:/var/log/grafana

  sample-backend:
    volumes:
      - ./docker/sample-backend:/usr/share/nginx/html
      - ./logs/sample-backend:/var/log/nginx
    environment:
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/templates
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d